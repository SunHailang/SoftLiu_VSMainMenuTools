using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using SoftLiu_VSMainMenuTools.Singleton;
using System.Net;
using System.Windows.Forms;
using System.IO;
using System.Security.Cryptography.X509Certificates;
using System.Net.Security;

namespace SoftLiu_VSMainMenuTools.Utils.ServerManager
{
    public class RequestManager : AutoGeneratedSingleton<RequestManager>
    {

        public RequestManager()
        {

        }

        public void DownloadFile(string url, ProgressBar progbar, Label label)
        {
            string m_url = url + "AssetBundles/";
            string m_platform = "Android";
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(m_url);
            request.Method = "GET";
            request.Headers.Add("Content-Function", "AssetBundles");
            request.Headers.Add("Content-GameID", "SoftLiu");
            request.Headers.Add("Content-Platform", m_platform);
            request.Timeout = 30;

            HttpWebResponse response = (HttpWebResponse)request.GetResponse();

            if (response.StatusCode != HttpStatusCode.OK)
            {
                Console.WriteLine("HttpStatusCode : " + response.StatusCode);
                return;
            }
            long totalBytes = response.ContentLength;
            if (totalBytes < 0)
            {
                Console.WriteLine("Total Bytes : " + totalBytes);
                return;
            }
            string fileDis = response.GetResponseHeader("Content-disposition");
            string fileName = "";
            string[] data1 = fileDis.Split(';');
            string data2 = "";
            for (int i = 0; i < data1.Length; i++)
            {
                if (data1[i].Trim().Contains("filename="))
                {
                    data2 = data1[i];
                    break;
                }
            }
            string[] data3 = data2.Split('=');
            if (data3.Length == 2)
            {
                fileName = data3[1];
            }

            if (!Directory.Exists("Resources/AssetBundles/" + m_platform))
            {
                Directory.CreateDirectory("Resources/AssetBundles/" + m_platform);
            }
            fileName = "Resources/AssetBundles/" + m_platform + "/" + fileName;

            if (progbar != null)
            {
                progbar.Maximum = 100;
            }
            Stream st = response.GetResponseStream();
            Stream so = new FileStream(fileName, FileMode.Create);

            long totalDownloadBytes = 0;
            byte[] buffer = new byte[1024 * 64];
            int osize = 0;
            while ((osize = st.Read(buffer, 0, buffer.Length)) > 0)
            {
                totalDownloadBytes = osize + totalDownloadBytes;
                Application.DoEvents();
                so.Write(buffer, 0, osize);

                float percent = (float)totalDownloadBytes / (float)totalBytes * 100;
                label.Text = Math.Floor(percent).ToString() + "%";
                progbar.Value = (int)percent;
                Application.DoEvents();
            }
            so.Close();
            st.Close();

        }


        private string GetFileName()
        {
            return null;
        }

    }
}
